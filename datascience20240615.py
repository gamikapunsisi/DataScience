# -*- coding: utf-8 -*-
"""DataScience20240615.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fjyNCFCUleAVY_9eOvPS87zz5c1pxRNp
"""

from sklearn.cluster import KMeans
from sklearn.preprocessing import MinMaxScaler
import pandas as pd

data = {
    'Age': [24,45,35,55,23,40,62,22,36,48],
    'Salary': [55000,105000,75000,120000,45000,95000,135000,41000,70000,115000]
}

print(type(data))
df = pd.DataFrame(data)
print(df)
x = df[['Age', 'Salary']]
print(x)



optimal_k = 3
kmeans = KMeans(n_clusters=optimal_k, random_state=0)
kmeans.fit(x)

df['Cluster'] = kmeans.labels_
df

centers = kmeans.cluster_centers_
labels = kmeans.labels_

print('Cluster centers:\n', centers)
print('Label:',labels)

import matplotlib.pyplot as plt

plt.scatter(df['Age'], df['Salary'], c=df['Cluster']),

plt.xlabel('Age')
plt.ylabel('Salary')
plt.title('K-Means Clustering of Employees')
plt.show()

from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

X = df[['Age', 'Salary']]

sse = []

for k in range(1, 11):
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(X)
    sse.append(kmeans.inertia_)

plt.plot(range(1, 11), sse)
plt.xlabel('Number of Clusters (k)')
plt.ylabel('Sum of Squared Errors (SSE)')
plt.title('Elbow Method for Optimal k')
plt.show()